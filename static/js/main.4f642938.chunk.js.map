{"version":3,"sources":["actions/types.js","actions/logActions.js","components/layout/SearchBar.js","components/logs/LogItem.js","components/layout/Preloader.js","components/logs/Logs.js","components/layout/AddBtn.js","actions/techActions.js","components/techs/TechSelectOptions.js","components/logs/AddLogModal.js","components/logs/EditLogModal.js","components/techs/AddTechModal.js","components/techs/TechItem.js","components/techs/TechListModal.js","reducers/logReducer.js","reducers/techReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["GET_LOGS","ADD_LOG","DELETE_LOG","SET_CURRENT","CLEAR_CURRENT","UPDATE_LOG","SET_LOADING","LOGS_ERROR","SEARCH_LOGS","GET_TECHS","ADD_TECH","DELETE_TECH","TECHS_ERROR","setLoading","type","connect","searchLogs","text","dispatch","a","fetch","res","json","data","payload","response","statusText","useRef","style","marginBottom","className","id","placeholder","ref","onChange","e","current","value","htmlFor","deleteLog","method","setCurrent","log","href","attention","onClick","message","tech","format","date","M","toast","html","Preloader","rel","target","state","getLogs","logs","loading","useEffect","length","map","AddBtn","getTechs","techs","t","firstName","lastName","modalStyle","width","height","addLog","body","JSON","stringify","headers","useState","setMessage","setAttention","setTech","name","disabled","checked","newLog","Date","updateLog","updLog","addTech","setFirstName","setLastName","deleteTech","initialState","error","combineReducers","action","filter","console","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","AutoInit","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f642938.chunk.js","sourcesContent":["export const GET_LOGS = 'GET_LOGS'\r\nexport const ADD_LOG = 'ADD_LOG'\r\nexport const DELETE_LOG = 'DELETE_LOG'\r\nexport const SET_CURRENT = 'SET_CURRENT'\r\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT'\r\nexport const UPDATE_LOG = 'UPDATE_LOG'\r\nexport const CLEAR_LOGS = 'CLEAR_LOGS'\r\nexport const SET_LOADING = 'SET_LOADING'\r\nexport const LOGS_ERROR = 'LOGS_ERROR'\r\nexport const SEARCH_LOGS = 'SEARCH_LOGS'\r\nexport const GET_TECHS = 'GET_TECHS'\r\nexport const ADD_TECH = 'ADD_TECH'\r\nexport const DELETE_TECH = 'DELETE_TECH'\r\nexport const TECHS_ERROR = 'TECHS_ERROR'\r\n","import {\r\n\tGET_LOGS,\r\n\tSET_LOADING,\r\n\tLOGS_ERROR,\r\n\tADD_LOG,\r\n\tDELETE_LOG,\r\n\tSET_CURRENT,\r\n\tCLEAR_CURRENT,\r\n\tUPDATE_LOG,\r\n\tSEARCH_LOGS\r\n} from './types'\r\n\r\n// Get Logs from the Server\r\nexport const getLogs = () => async dispatch => {\r\n\ttry {\r\n\t\tsetLoading()\r\n\r\n\t\tconst res = await fetch('/logs')\r\n\t\tconst data = await res.json()\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_LOGS,\r\n\t\t\tpayload: data\r\n\t\t})\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: LOGS_ERROR,\r\n\t\t\tpayload: err.response.statusText\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const addLog = log => async dispatch => {\r\n\ttry {\r\n\t\tsetLoading()\r\n\r\n\t\tconst res = await fetch('/logs', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: JSON.stringify(log),\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t})\r\n\t\tconst data = await res.json()\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_LOG,\r\n\t\t\tpayload: data\r\n\t\t})\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: LOGS_ERROR,\r\n\t\t\tpayload: err.response.statusText\r\n\t\t})\r\n\t}\r\n}\r\n\r\n// Update Log on Server\r\nexport const updateLog = log => async dispatch => {\r\n\ttry {\r\n\t\tsetLoading()\r\n\r\n\t\tconst res = await fetch(`/logs/${log.id}`, {\r\n\t\t\tmethod: 'PUT',\r\n\t\t\tbody: JSON.stringify(log),\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tconst data = await res.json()\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: UPDATE_LOG,\r\n\t\t\tpayload: data\r\n\t\t})\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: LOGS_ERROR,\r\n\t\t\tpayload: err.response.statusText\r\n\t\t})\r\n\t}\r\n}\r\n\r\n// Search server logs\r\nexport const searchLogs = text => async dispatch => {\r\n\ttry {\r\n\t\tsetLoading()\r\n\r\n\t\tconst res = await fetch(`/logs?q=${text}`)\r\n\t\tconst data = await res.json()\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_LOGS,\r\n\t\t\tpayload: data\r\n\t\t})\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: LOGS_ERROR,\r\n\t\t\tpayload: err.response.statusText\r\n\t\t})\r\n\t}\r\n}\r\n\r\n// Delete Log from Server\r\nexport const deleteLog = id => async dispatch => {\r\n\ttry {\r\n\t\tsetLoading()\r\n\r\n\t\tawait fetch(`/logs/${id}`, {\r\n\t\t\tmethod: 'DELETE'\r\n\t\t})\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: DELETE_LOG,\r\n\t\t\tpayload: id\r\n\t\t})\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: LOGS_ERROR,\r\n\t\t\tpayload: err.response.statusText\r\n\t\t})\r\n\t}\r\n}\r\n\r\n// Set current log\r\nexport const setCurrent = log => {\r\n\treturn {\r\n\t\ttype: SET_CURRENT,\r\n\t\tpayload: log\r\n\t}\r\n}\r\n\r\n// Clear current log\r\nexport const clearCurrent = () => {\r\n\treturn {\r\n\t\ttype: CLEAR_CURRENT\r\n\t}\r\n}\r\n\r\n// Set Loading to True\r\nexport const setLoading = () => {\r\n\treturn {\r\n\t\ttype: SET_LOADING\r\n\t}\r\n}\r\n","import React, { useRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { searchLogs } from '../../actions/logActions'\r\n\r\nconst SearchBar = ({ searchLogs }) => {\r\n\tconst text = useRef('')\r\n\r\n\tconst onChange = e => {\r\n\t\tsearchLogs(text.current.value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<nav style={{ marginBottom: '30px' }} className='blue'>\r\n\t\t\t<div className='nav-wrapper'>\r\n\t\t\t\t<form>\r\n\t\t\t\t\t<div className='input-field'>\r\n\t\t\t\t\t\t<input id='search' type='search' placeholder='Search Logs...' ref={text} onChange={onChange} />\r\n\t\t\t\t\t\t<label className='label-icon' htmlFor='search'>\r\n\t\t\t\t\t\t\t<i className='material-icons'>search</i>\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<i className='material-icons'>close</i>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t)\r\n}\r\n\r\nSearchBar.propTypes = {\r\n\tsearchLogs: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { searchLogs })(SearchBar)\r\n","import React from 'react'\r\nimport Moment from 'react-moment'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { deleteLog, setCurrent } from '../../actions/logActions'\r\n\r\nimport M from 'materialize-css/dist/js/materialize.min.js'\r\n\r\nconst LogItem = ({ log, deleteLog, setCurrent }) => {\r\n\tconst onDelete = () => {\r\n\t\tdeleteLog(log.id)\r\n\t\tM.toast({ html: 'Log Deleted' })\r\n\t}\r\n\r\n\treturn (\r\n\t\t<li className='collection-item'>\r\n\t\t\t<div>\r\n\t\t\t\t<a\r\n\t\t\t\t\thref='#edit-log-modal'\r\n\t\t\t\t\tclassName={`modal-trigger ${\r\n\t\t\t\t\t\tlog.attention ? 'red-text' : 'blue-text'\r\n\t\t\t\t\t}`}\r\n\t\t\t\t\tonClick={() => setCurrent(log)}>\r\n\t\t\t\t\t{log.message}\r\n\t\t\t\t</a>\r\n\t\t\t\t<br />\r\n\t\t\t\t<span className='grey-text'>\r\n\t\t\t\t\t<span className='black-text'>ID #{log.id}</span> last updated by{' '}\r\n\t\t\t\t\t<span className='black-text'>{log.tech}</span> on{' '}\r\n\t\t\t\t\t<Moment format='MMMM Do YYYY, h:mm:ss a'>{log.date}</Moment>\r\n\t\t\t\t</span>\r\n\t\t\t\t<a href='#!' onClick={onDelete} className='secondary-content'>\r\n\t\t\t\t\t<i className='material-icons grey-text'>delete</i>\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</li>\r\n\t)\r\n}\r\n\r\nLogItem.propTypes = {\r\n\tlog: PropTypes.object.isRequired,\r\n\tdeleteLog: PropTypes.func.isRequired,\r\n\tsetCurrent: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { deleteLog, setCurrent })(LogItem)\r\n","import React from 'react'\r\n\r\nconst Preloader = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='progress blue lighten-4'>\r\n\t\t\t\t<div className='indeterminate blue'></div>\r\n\t\t\t</div>\r\n\t\t\t<p>\r\n\t\t\t\tSince this application uses a db.json server it must be downloaded and\r\n\t\t\t\trun locally to read and write data:{' '}\r\n\t\t\t\t<a\r\n\t\t\t\t\thref='https://github.com/AndrewKepson/logging-application-react-redux'\r\n\t\t\t\t\trel='noopener noreferrer nofollow'\r\n\t\t\t\t\ttarget='_blank'>\r\n\t\t\t\t\tGitHub Repository\r\n\t\t\t\t</a>\r\n\t\t\t</p>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Preloader\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport LogItem from './LogItem'\r\nimport Preloader from '../layout/Preloader'\r\nimport PropTypes from 'prop-types'\r\nimport { getLogs } from '../../actions/logActions'\r\n\r\nconst Logs = ({ log: { logs, loading }, getLogs }) => {\r\n\t// When the component mounts, fetch our logs from the database\r\n\tuseEffect(() => {\r\n\t\tgetLogs()\r\n\t\t// eslint-disable-next-line\r\n\t}, [])\r\n\r\n\tif (loading || logs === null) {\r\n\t\treturn <Preloader />\r\n\t}\r\n\t// Data is available in the return statement\r\n\treturn (\r\n\t\t<ul className='collection with-header'>\r\n\t\t\t<li className='collection-header'>\r\n\t\t\t\t<h4 className='center'>System Logs</h4>\r\n\t\t\t</li>\r\n\t\t\t{!loading && logs.length === 0 ? (\r\n\t\t\t\t<p className='center'>No Requests...</p>\r\n\t\t\t) : (\r\n\t\t\t\tlogs.map(log => <LogItem log={log} key={log.id} />)\r\n\t\t\t)}\r\n\t\t</ul>\r\n\t)\r\n}\r\n\r\nLogs.propTypes = {\r\n\tlog: PropTypes.object.isRequired,\r\n\tgetLogs: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tlog: state.log\r\n})\r\n\r\nexport default connect(mapStateToProps, { getLogs })(Logs)\r\n","import React from 'react'\r\n\r\nconst AddBtn = () => {\r\n\treturn (\r\n\t\t<div className='fixed-action-btn'>\r\n\t\t\t<a\r\n\t\t\t\thref='#add-log-modal'\r\n\t\t\t\tclassName='btn-floating btn-large blue darken-2 modal-trigger'>\r\n\t\t\t\t<i className='large material-icons'>add</i>\r\n\t\t\t</a>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\thref='#tech-list-modal'\r\n\t\t\t\t\t\tclassName='btn-floating green modal-trigger'>\r\n\t\t\t\t\t\t<i className='material-icons'>person</i>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<a href='#add-tech-modal' className='btn-floating red modal-trigger'>\r\n\t\t\t\t\t\t<i className='material-icons'>person_add</i>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default AddBtn\r\n","import {\r\n\tGET_TECHS,\r\n\tADD_TECH,\r\n\tDELETE_TECH,\r\n\tSET_LOADING,\r\n\tTECHS_ERROR\r\n} from './types'\r\n\r\n// Get techs from the server\r\nexport const getTechs = () => async dispatch => {\r\n\ttry {\r\n\t\tsetLoading()\r\n\r\n\t\tconst res = await fetch('/techs')\r\n\t\tconst data = await res.json()\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_TECHS,\r\n\t\t\tpayload: data\r\n\t\t})\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: TECHS_ERROR,\r\n\t\t\tpayload: err.response.statusText\r\n\t\t})\r\n\t}\r\n}\r\n\r\n// Add tech to server\r\nexport const addTech = tech => async dispatch => {\r\n\ttry {\r\n\t\tsetLoading()\r\n\r\n\t\tconst res = await fetch('/techs', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: JSON.stringify(tech),\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/JSON'\r\n\t\t\t}\r\n\t\t})\r\n\t\tconst data = await res.json()\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_TECH,\r\n\t\t\tpayload: data\r\n\t\t})\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: TECHS_ERROR,\r\n\t\t\tpayload: err.response.statusText\r\n\t\t})\r\n\t}\r\n}\r\n\r\n// Delete tech from server\r\nexport const deleteTech = id => async dispatch => {\r\n\ttry {\r\n\t\tsetLoading()\r\n\r\n\t\tawait fetch(`/techs/${id}`, {\r\n\t\t\tmethod: 'DELETE'\r\n\t\t})\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: DELETE_TECH,\r\n\t\t\tpayload: id\r\n\t\t})\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: TECHS_ERROR,\r\n\t\t\tpayload: err.response.statusText\r\n\t\t})\r\n\t}\r\n}\r\n\r\n// Set loading to true\r\nexport const setLoading = () => {\r\n\treturn {\r\n\t\ttype: SET_LOADING\r\n\t}\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { getTechs } from '../../actions/techActions'\r\n\r\nconst TechSelectOptions = ({ getTechs, tech: { techs, loading } }) => {\r\n\tuseEffect(() => {\r\n\t\tgetTechs()\r\n\t\t//eslint-disable-next-line\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t!loading &&\r\n\t\ttechs !== null &&\r\n\t\ttechs.map(t => (\r\n\t\t\t<option key={t.id} value={`${t.firstName} ${t.lastName}`}>\r\n\t\t\t\t{t.firstName} {t.lastName}\r\n\t\t\t</option>\r\n\t\t))\r\n\t)\r\n}\r\n\r\nTechSelectOptions.propTypes = {\r\n\ttech: PropTypes.object.isRequired,\r\n\tgetTechs: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\ttech: state.tech\r\n})\r\n\r\nexport default connect(mapStateToProps, { getTechs })(TechSelectOptions)\r\n","import React, { useState } from 'react'\r\nimport TechSelectOptions from '../techs/TechSelectOptions'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { addLog } from '../../actions/logActions'\r\nimport M from 'materialize-css/dist/js/materialize.min.js'\r\n\r\nconst AddLogModal = ({ addLog }) => {\r\n\tconst [message, setMessage] = useState('')\r\n\tconst [attention, setAttention] = useState(false)\r\n\tconst [tech, setTech] = useState('')\r\n\r\n\tconst onSubmit = () => {\r\n\t\tif (message === '' || tech === '') {\r\n\t\t\tM.toast({ html: 'Please enter a message and tech' })\r\n\t\t} else {\r\n\t\t\tconst newLog = {\r\n\t\t\t\tmessage,\r\n\t\t\t\tattention,\r\n\t\t\t\ttech,\r\n\t\t\t\tdate: new Date()\r\n\t\t\t}\r\n\r\n\t\t\taddLog(newLog)\r\n\r\n\t\t\tM.toast({ html: `Log added by ${tech}` })\r\n\r\n\t\t\t// Clear Fields\r\n\t\t\tsetMessage('')\r\n\t\t\tsetTech('')\r\n\t\t\tsetAttention(false)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id='add-log-modal' className='modal' style={modalStyle}>\r\n\t\t\t<div className='modal-content'>\r\n\t\t\t\t<h4>Enter System Log</h4>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<div className='input-field'>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tname='message'\r\n\t\t\t\t\t\t\tvalue={message}\r\n\t\t\t\t\t\t\tonChange={e => setMessage(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<label htmlFor='message' className='active'>\r\n\t\t\t\t\t\t\tLog Message\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<div className='input-field'>\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tname='tech'\r\n\t\t\t\t\t\t\tvalue={tech}\r\n\t\t\t\t\t\t\tclassName='browser-default'\r\n\t\t\t\t\t\t\tonChange={e => setTech(e.target.value)}>\r\n\t\t\t\t\t\t\t<option value='' disabled>\r\n\t\t\t\t\t\t\t\tSelect Technician\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t<TechSelectOptions />\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<div className='input-field'>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\t\tclassName='filled-in'\r\n\t\t\t\t\t\t\t\t\tchecked={attention}\r\n\t\t\t\t\t\t\t\t\tvalue={attention}\r\n\t\t\t\t\t\t\t\t\tonChange={e => setAttention(!attention)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<span>Needs Attention</span>\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='modal-footer'>\r\n\t\t\t\t<a\r\n\t\t\t\t\thref='#!'\r\n\t\t\t\t\tonClick={onSubmit}\r\n\t\t\t\t\tclassName='modal-close waves-effect blue waves-light btn-flat'>\r\n\t\t\t\t\tEnter\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAddLogModal.propTypes = {\r\n\taddLog: PropTypes.func.isRequired\r\n}\r\n\r\nconst modalStyle = {\r\n\twidth: '75%',\r\n\theight: '75%'\r\n}\r\n\r\nexport default connect(null, { addLog })(AddLogModal)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport M from 'materialize-css/dist/js/materialize.min.js'\r\nimport { updateLog } from '../../actions/logActions'\r\n\r\nconst EditLogModal = ({ current, updateLog }) => {\r\n\tconst [message, setMessage] = useState('')\r\n\tconst [attention, setAttention] = useState(false)\r\n\tconst [tech, setTech] = useState('')\r\n\r\n\tuseEffect(() => {\r\n\t\tif (current) {\r\n\t\t\tsetMessage(current.message)\r\n\t\t\tsetAttention(current.attention)\r\n\t\t\tsetTech(current.tech)\r\n\t\t}\r\n\t}, [current])\r\n\r\n\tconst onSubmit = () => {\r\n\t\tif (message === '' || tech === '') {\r\n\t\t\tM.toast({ html: 'Please enter a message and tech' })\r\n\t\t} else {\r\n\t\t\tconst updLog = {\r\n\t\t\t\tid: current.id,\r\n\t\t\t\tmessage,\r\n\t\t\t\tattention,\r\n\t\t\t\ttech,\r\n\t\t\t\tdate: new Date()\r\n\t\t\t}\r\n\r\n\t\t\tupdateLog(updLog)\r\n\t\t\tM.toast({ html: `Log Updated by ${tech}` })\r\n\r\n\t\t\t// Clear Fields\r\n\t\t\tsetMessage('')\r\n\t\t\tsetTech('')\r\n\t\t\tsetAttention(false)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id='edit-log-modal' className='modal' style={modalStyle}>\r\n\t\t\t<div className='modal-content'>\r\n\t\t\t\t<h4>Enter System Log</h4>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<div className='input-field'>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tname='message'\r\n\t\t\t\t\t\t\tvalue={message}\r\n\t\t\t\t\t\t\tonChange={e => setMessage(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<div className='input-field'>\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tname='tech'\r\n\t\t\t\t\t\t\tvalue={tech}\r\n\t\t\t\t\t\t\tclassName='browser-default'\r\n\t\t\t\t\t\t\tonChange={e => setTech(e.target.value)}>\r\n\t\t\t\t\t\t\t<option value='' disabled>\r\n\t\t\t\t\t\t\t\tSelect Technician\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t<option value='John Doe'>John Doe</option>\r\n\t\t\t\t\t\t\t<option value='Sam Smith'>Sam Smith</option>\r\n\t\t\t\t\t\t\t<option value='Sara Wilson'>Sara Wilson</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<div className='input-field'>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\t\tclassName='filled-in'\r\n\t\t\t\t\t\t\t\t\tchecked={attention}\r\n\t\t\t\t\t\t\t\t\tvalue={attention}\r\n\t\t\t\t\t\t\t\t\tonChange={e => setAttention(!attention)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<span>Needs Attention</span>\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='modal-footer'>\r\n\t\t\t\t<a\r\n\t\t\t\t\thref='#!'\r\n\t\t\t\t\tonClick={onSubmit}\r\n\t\t\t\t\tclassName='modal-close waves-effect blue waves-light btn-flat'>\r\n\t\t\t\t\tEnter\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst modalStyle = {\r\n\twidth: '75%',\r\n\theight: '75%'\r\n}\r\n\r\nEditLogModal.propTypes = {\r\n\tcurrent: PropTypes.object,\r\n\tupdateLog: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tcurrent: state.log.current\r\n})\r\n\r\nexport default connect(mapStateToProps, { updateLog })(EditLogModal)\r\n","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { addTech } from '../../actions/techActions'\r\nimport M from 'materialize-css/dist/js/materialize.min.js'\r\n\r\nconst AddTechModal = ({ addTech }) => {\r\n\tconst [firstName, setFirstName] = useState('')\r\n\tconst [lastName, setLastName] = useState('')\r\n\r\n\tconst onSubmit = () => {\r\n\t\tif (firstName === '' || lastName === '') {\r\n\t\t\tM.toast({ html: 'Please enter the first and last name' })\r\n\t\t} else {\r\n\t\t\taddTech({\r\n\t\t\t\tfirstName,\r\n\t\t\t\tlastName\r\n\t\t\t})\r\n\r\n\t\t\tM.toast({ html: `${firstName} ${lastName} was added as a tech.` })\r\n\r\n\t\t\t// Clear Fields\r\n\t\t\tsetFirstName('')\r\n\t\t\tsetLastName('')\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id='add-tech-modal' className='modal'>\r\n\t\t\t<div className='modal-content'>\r\n\t\t\t\t<h4>New Technician</h4>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<div className='input-field'>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\tvalue={firstName}\r\n\t\t\t\t\t\t\tonChange={e => setFirstName(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<label htmlFor='firstName' className='active'>\r\n\t\t\t\t\t\t\tFirst Name\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<div className='input-field'>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\tvalue={lastName}\r\n\t\t\t\t\t\t\tonChange={e => setLastName(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<label htmlFor='lastName' className='active'>\r\n\t\t\t\t\t\t\tFirst Name\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='modal-footer'>\r\n\t\t\t\t<a\r\n\t\t\t\t\thref='#!'\r\n\t\t\t\t\tonClick={onSubmit}\r\n\t\t\t\t\tclassName='modal-close waves-effect blue waves-light btn-flat'>\r\n\t\t\t\t\tEnter\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAddTechModal.propTypes = {\r\n\taddTech: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { addTech })(AddTechModal)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { deleteTech } from '../../actions/techActions'\r\nimport M from 'materialize-css/dist/js/materialize.min.js'\r\n\r\nconst TechItem = ({ deleteTech, tech: { firstName, lastName, id } }) => {\r\n\tconst onDelete = () => {\r\n\t\tdeleteTech(id)\r\n\r\n\t\tM.toast({ html: `Technician (${firstName} ${lastName}) deleted.` })\r\n\t}\r\n\r\n\treturn (\r\n\t\t<li className='collection-item'>\r\n\t\t\t<div>\r\n\t\t\t\t{firstName} {lastName}\r\n\t\t\t\t<a href='#!' className='secondary-content'>\r\n\t\t\t\t\t<i className='material-icons grey-text' onClick={onDelete}>\r\n\t\t\t\t\t\tdelete\r\n\t\t\t\t\t</i>\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</li>\r\n\t)\r\n}\r\n\r\nTechItem.propTypes = {\r\n\ttech: PropTypes.object.isRequired,\r\n\tdeleteTech: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { deleteTech })(TechItem)\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport TechItem from './TechItem'\r\nimport { getTechs } from '../../actions/techActions'\r\n\r\nconst TechListModal = ({ getTechs, tech: { techs, loading } }) => {\r\n\tuseEffect(() => {\r\n\t\tgetTechs()\r\n\t\t// eslint-disable-next-line\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<div id='tech-list-modal' className='modal' style={modalStyle}>\r\n\t\t\t<div className='modal-content'>\r\n\t\t\t\t<h4>Technician List</h4>\r\n\t\t\t\t<ul className='collection'>\r\n\t\t\t\t\t{!loading &&\r\n\t\t\t\t\t\ttechs !== null &&\r\n\t\t\t\t\t\ttechs.map(tech => (\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<TechItem tech={tech} key={tech.id} />\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst modalStyle = {\r\n\twidth: '75%',\r\n\theight: '75%'\r\n}\r\n\r\nTechListModal.propTypes = {\r\n\ttech: PropTypes.object.isRequired,\r\n\tgetTechs: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\ttech: state.tech\r\n})\r\n\r\nexport default connect(mapStateToProps, { getTechs })(TechListModal)\r\n","import {\r\n\tGET_LOGS,\r\n\tSET_LOADING,\r\n\tLOGS_ERROR,\r\n\tADD_LOG,\r\n\tDELETE_LOG,\r\n\tUPDATE_LOG,\r\n\tSET_CURRENT,\r\n\tCLEAR_CURRENT,\r\n\tSEARCH_LOGS\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n\tlogs: null,\r\n\tcurrent: null,\r\n\tloading: false,\r\n\terror: null\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase GET_LOGS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlogs: action.payload\r\n\t\t\t}\r\n\t\tcase ADD_LOG:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlogs: [...state.logs, action.payload],\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase DELETE_LOG:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlogs: state.logs.filter(log => log.id !== action.payload),\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase UPDATE_LOG:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlogs: state.logs.map(log =>\r\n\t\t\t\t\tlog.id === action.payload.id ? action.payload : log\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\tcase SEARCH_LOGS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlogs: action.payload\r\n\t\t\t}\r\n\t\tcase SET_CURRENT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrent: action.payload\r\n\t\t\t}\r\n\t\tcase CLEAR_CURRENT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrent: null\r\n\t\t\t}\r\n\t\tcase SET_LOADING:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true\r\n\t\t\t}\r\n\t\tcase LOGS_ERROR:\r\n\t\t\tconsole.error(action.payload)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\terror: action.payload\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n","import {\r\n\tGET_TECHS,\r\n\tADD_TECH,\r\n\tDELETE_TECH,\r\n\tSET_LOADING,\r\n\tTECHS_ERROR\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n\ttechs: null,\r\n\tloading: false,\r\n\terror: null\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase GET_TECHS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttechs: action.payload,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase ADD_TECH:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttechs: [...state.techs, action.payload],\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase DELETE_TECH:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttechs: state.techs.filter(tech => tech.id !== action.payload),\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase SET_LOADING:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true\r\n\t\t\t}\r\n\t\tcase TECHS_ERROR:\r\n\t\t\tconsole.error(action.payload)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\terror: action.payload,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport logReducer from './logReducer'\r\nimport techReducer from './techReducer'\r\n\r\nexport default combineReducers({\r\n\tlog: logReducer,\r\n\ttech: techReducer\r\n})\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n\trootReducer,\r\n\tinitialState,\r\n\tcomposeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","import React, { Fragment, useEffect } from 'react'\nimport SearchBar from './components/layout/SearchBar'\nimport Logs from './components/logs/Logs'\nimport AddBtn from './components/layout/AddBtn'\nimport AddLogModal from './components/logs/AddLogModal'\nimport EditLogModal from './components/logs/EditLogModal'\nimport AddTechModal from './components/techs/AddTechModal'\nimport TechListModal from './components/techs/TechListModal'\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nimport 'materialize-css/dist/css/materialize.min.css'\nimport M from 'materialize-css/dist/js/materialize.min.js'\nimport './App.css'\n\nconst App = () => {\n\tuseEffect(() => {\n\t\t//Initialize Materialize JavaScript\n\t\tM.AutoInit()\n\t})\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<Fragment>\n\t\t\t\t<SearchBar />\n\t\t\t\t<div className='container'>\n\t\t\t\t\t<AddBtn />\n\t\t\t\t\t<AddLogModal />\n\t\t\t\t\t<EditLogModal />\n\t\t\t\t\t<AddTechModal />\n\t\t\t\t\t<TechListModal />\n\t\t\t\t\t<Logs />\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t</Provider>\n\t)\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}